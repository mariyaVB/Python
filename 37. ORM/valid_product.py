def enter():
    print('\n')


list_category = ['–ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã', '–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∏–≥—Ä—ã']


def choice_category(category_file):
    for category in category_file:
        print(f'üü£ {category}')
    choice = input('–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞: _____')

    return choice


def valid_category(category_file, category=None, new_category=None):
    if category is not None:
        if category not in category_file or len(category) == 0:
            print('‚ÄºÔ∏è–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
            return False
        return category

    if new_category is not None:
        if new_category == '':
            return None

        if new_category not in category_file:
            print('‚ÄºÔ∏è–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
            return False
        return new_category


def valid_digit(digit):
    try:
        int(digit)
    except ValueError:
        print('–ù–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π.')
        return False

    if int(digit) <= 0:
        print(f'‚ÄºÔ∏è–ù–µ –º–æ–∂–µ—Ç –±—ã—Ç—å 0 –∏–ª–∏ –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º.')
        return False
    return digit


def valid_text(text):
    if 5 > len(text) >= 0:
        print('‚ÄºÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 5 —Å–∏–º–≤–æ–ª–æ–≤.')
        return False
    if text.isdigit() is True:
        print('‚ÄºÔ∏è –ù–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ–¥–Ω–∏ —Ü–∏—Ñ—Ä—ã.')
        return False
    return text


def valid_redaction(variable, func):
    if variable == '':
        print('‚§µÔ∏è–ù–µ –∏–∑–º–µ–Ω–µ–Ω–æ.')
        return None

    if len(variable) > 0:
        redaction = func
        return redaction


def get_product(list_id):
    choice = input('\nid —Ç–æ–≤–∞—Ä–∞_____')

    for i_id in list_id:
        i_id = str(i_id).rstrip(',)').lstrip('(')
        if choice == i_id:
            print('‚úÖid –Ω–∞–π–¥–µ–Ω.')
            return choice
    print('‚ÄºÔ∏èid –Ω–µ –Ω–∞–π–¥–µ–Ω.')
    return False


def show_del_product(del_product):
    for product in del_product:
        return product






