# 1.	–°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É "–°—Ç—É–¥–µ–Ω—Ç—ã" —Å –ø–æ–ª—è–º–∏: –ò–º—è, –§–∞–º–∏–ª–∏—è, –í–æ–∑—Ä–∞—Å—Ç, –ì—Ä—É–ø–ø–∞.

import sqlite3 as sql

with sql.connect('students.db') as connect:
    students = connect.cursor()
    students.execute("""CREATE TABLE IF NOT EXISTS Students (
    student_id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    age INTEGER NOT NULL,
    faculty TEXT)""")

print('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö "–°—Ç—É–¥–µ–Ω—Ç—ã" —Å–æ–∑–¥–∞–Ω–∞.')


def add_student(cur, name, age, faculty):
    cur.execute(f'INSERT INTO Students(name, age, faculty) VALUES ("{name}", "{age}", "{faculty}")')

    # with sql.connect('students.db') as con:
    #     cur = con.cursor()
    #     add_student(cur, name, age, faculty)


while True:
    command = input('''
    1 = –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É
    0 = –í—ã—Ö–æ–¥''')

    match command:
        case '1':
            name_student = input('–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å—Ç—É–¥–µ–Ω—Ç–∞: _____')
            age_student = int(input('–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞: _____'))
            while age_student < 11:
                print('–í –•–æ–≥–≤–∞—Ä—Ç—Å –ø—Ä–∏–Ω–∏–º–∞—é—Ç —Å 11 –ª–µ—Ç.')
                age_student = int(input('–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞: _____'))

            def choice_faculty():
                for fac in ['ü¶Å–ì—Ä–∏—Ñ—Ñ–∏–Ω–¥–æ—Ä', 'ü¶Ö –ö–æ–≥—Ç–µ–≤—Ä–∞–Ω', 'ü¶´ –ü—É—Ñ–µ–Ω–¥—É–π', 'üêç –°–ª–∏–∑–µ—Ä–∏–Ω']:
                    print(f'{fac}')
                    choice = input('–í—ã–±—Ä–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∞–∫—É–ª—å—Ç–µ—Ç? 1 = –î–∞ | 2 = –ù–µ—Ç | 0 = –í—ã—Ö–æ–¥\n–û—Ç–≤–µ—Ç _____')
                    if choice == '1':
                        return fac
                    if choice == '2':
                        pass
                    if choice == '0':
                        return 0
            faculty_student = choice_faculty()

            with sql.connect('students.db') as con:
                cur = con.cursor()
                add_student(cur, name_student, age_student, faculty_student)

        case '0':
            break



